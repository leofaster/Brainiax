
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x85\x8eP\x07\x81Ee/!\r\xc2y\x97\xd5\xc3\\'
    
_lr_action_items = {'TkTrue':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TkMod':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,64,64,64,-6,64,64,-7,-8,64,64,64,-9,64,-12,-14,-28,64,-17,64,64,64,-18,64,64,-16,64,64,64,64,-13,64,64,64,64,]),'TkIf':([2,5,13,40,53,72,80,117,121,130,],[6,6,6,6,6,6,6,6,6,6,]),'TkResta':([6,7,9,10,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,81,82,86,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,120,124,126,128,],[22,22,22,22,44,22,22,-4,22,-5,-3,22,-6,-11,-10,22,63,22,22,63,22,63,-6,63,-48,-44,-49,-45,-46,-43,-47,44,63,-7,-8,63,63,22,22,22,22,22,22,22,22,22,22,22,22,22,22,63,-9,63,22,22,-42,-12,-14,-28,-19,-17,63,63,63,-18,63,-15,-16,63,63,63,63,-13,63,63,22,22,63,63,]),'TkNegacion':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TkFalse':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TkConjuncion':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,67,67,67,-6,67,67,-7,-8,67,67,67,-9,67,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,67,-23,-13,67,67,67,67,]),'TkNum':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TkParAbre':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TkDone':([11,12,21,23,25,26,28,29,30,35,41,43,52,58,59,78,79,83,84,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,118,119,122,123,125,127,129,131,132,133,134,],[-51,42,57,-4,-5,-3,-6,-11,-10,-30,-50,84,-31,-7,-8,-9,-29,-52,-38,116,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,118,-21,-20,-26,-23,-13,119,-37,-35,-32,-39,-41,129,131,-36,-34,-40,134,-33,]),'TkRead':([2,5,13,40,53,72,80,117,121,130,],[7,7,7,7,7,7,7,7,7,7,]),'TkMenorIgual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,66,66,66,-6,66,66,-7,-8,66,66,66,-9,66,-12,-14,-28,-19,-17,-25,-24,66,-18,-22,-15,-16,66,66,66,-23,-13,66,66,66,66,]),'TkFrom':([38,],[81,]),'TkComa':([14,19,44,45,46,47,48,49,50,51,86,],[46,55,-48,-44,-49,-45,-46,-43,-47,46,-42,]),'TkMas':([14,23,25,26,28,29,30,32,35,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,77,78,79,86,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[50,-4,-5,-3,-6,-11,-10,70,70,70,-6,70,-48,-44,-49,-45,-46,-43,-47,50,70,-7,-8,70,70,70,-9,70,-42,-12,-14,-28,-19,-17,70,70,70,-18,70,-15,-16,70,70,70,70,-13,70,70,70,70,]),'TkIdent':([2,4,5,6,7,9,10,13,15,22,24,27,31,33,34,36,40,53,55,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,115,117,120,121,124,130,],[8,19,8,28,28,28,38,8,28,28,28,28,28,28,28,28,8,8,19,19,28,28,28,28,28,28,28,28,28,28,8,28,28,28,28,8,28,28,123,8,28,8,28,8,]),'TkMult':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,71,71,71,-6,71,71,-7,-8,71,71,71,-9,71,-12,-14,-28,71,-17,71,71,71,-18,71,71,-16,71,71,71,71,-13,71,71,71,71,]),'TkConcat':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,62,62,62,-6,62,62,-7,-8,62,62,62,-9,62,-12,-14,-28,62,62,62,62,62,62,62,62,62,62,62,62,62,-13,62,62,62,62,]),'TkDisyuncion':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,75,75,75,-6,75,75,-7,-8,75,75,75,-9,75,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,75,75,75,75,]),'TkWhile':([2,5,13,40,53,72,80,117,121,130,],[9,9,9,9,9,9,9,9,9,9,]),'TkDeclare':([0,2,5,13,40,53,72,80,117,121,130,],[4,4,4,4,4,4,4,4,4,4,4,]),'$end':([3,42,57,],[0,-2,-1,]),'TkPuntoYComa':([11,12,20,21,23,25,26,28,29,30,35,41,43,52,58,59,78,79,83,84,87,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,118,119,122,123,125,127,129,131,132,133,134,],[-51,40,56,40,-4,-5,-3,-6,-11,-10,-30,-50,40,-31,-7,-8,-9,-29,-52,-38,40,-56,-60,-59,-61,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,40,-21,-20,-26,-23,-13,40,-37,-35,-32,-39,-41,40,40,-36,-34,-40,40,-33,]),'TkAsignacion':([8,],[36,]),'TkPunto':([14,44,45,46,47,48,49,50,51,86,],[45,-48,-44,-49,-45,-46,-43,-47,45,-42,]),'TkFor':([2,5,13,40,53,72,80,117,121,130,],[10,10,10,10,10,10,10,10,10,10,]),'TkElse':([11,23,25,26,28,29,30,35,41,52,58,59,78,79,83,84,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,118,119,122,123,129,131,132,134,],[-51,-4,-5,-3,-6,-11,-10,-30,-50,-31,-7,-8,-9,-29,-52,-38,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,117,-21,-20,-26,-23,-13,-37,-35,-32,-39,-41,-36,-34,-40,-33,]),'TkLlaveCierra':([23,25,26,28,29,30,44,45,46,47,48,49,50,51,58,59,61,78,86,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,],[-4,-5,-3,-6,-11,-10,-48,-44,-49,-45,-46,-43,-47,85,-7,-8,95,-9,-42,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,]),'TkDesigual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,73,73,73,-6,73,73,-7,-8,73,73,73,-9,73,-12,-14,-28,-19,-17,-25,-24,73,-18,-22,-15,-16,-21,-20,73,-23,-13,73,73,73,73,]),'TkDiv':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,68,68,68,-6,68,68,-7,-8,68,68,68,-9,68,-12,-14,-28,68,-17,68,68,68,-18,68,68,-16,68,68,68,68,-13,68,68,68,68,]),'TkIgual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,74,74,74,-6,74,74,-7,-8,74,74,74,-9,74,-12,-14,-28,-19,-17,-25,-24,74,-18,-22,-15,-16,-21,-20,74,-23,-13,74,74,74,74,]),'TkAt':([85,],[115,]),'TkTo':([23,25,26,28,29,30,38,39,58,59,78,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,],[-4,-5,-3,-6,-11,-10,-6,82,-7,-8,-9,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,120,]),'TkMenor':([14,23,25,26,28,29,30,32,35,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,77,78,79,86,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[48,-4,-5,-3,-6,-11,-10,69,69,69,-6,69,-48,-44,-49,-45,-46,-43,-47,48,69,-7,-8,69,69,69,-9,69,-42,-12,-14,-28,-19,-17,-25,-24,69,-18,-22,-15,-16,69,69,69,-23,-13,69,69,69,69,]),'TkCorcheteCierra':([23,25,26,28,29,30,58,59,77,78,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,128,],[-4,-5,-3,-6,-11,-10,-7,-8,111,-9,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,132,]),'TkTape':([54,],[91,]),'TkDo':([23,25,26,28,29,30,37,58,59,78,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,114,126,],[-4,-5,-3,-6,-11,-10,80,-7,-8,-9,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,121,130,]),'TkType':([18,19,92,],[54,-58,-57,]),'TkBoolean':([54,],[89,]),'TkParCierra':([23,25,26,28,29,30,58,59,60,78,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,],[-4,-5,-3,-6,-11,-10,-7,-8,94,-9,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,]),'TkInteger':([54,],[90,]),'TkExecute':([0,1,2,5,13,16,17,20,40,53,72,80,88,89,90,91,93,117,121,130,],[2,5,13,13,13,53,-53,-55,13,13,13,13,-56,-60,-59,-61,-54,13,13,13,]),'TkLlaveAbre':([2,5,6,7,9,10,13,15,22,24,27,31,33,34,36,40,53,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,117,120,121,124,130,],[14,14,31,31,31,31,14,31,31,31,31,31,31,31,31,14,14,31,31,31,31,31,31,31,31,31,31,14,31,31,31,31,14,31,31,14,31,14,31,14,]),'TkWrite':([2,5,13,40,53,72,80,117,121,130,],[15,15,15,15,15,15,15,15,15,15,]),'TkThen':([23,25,26,28,29,30,32,58,59,78,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,],[-4,-5,-3,-6,-11,-10,72,-7,-8,-9,-12,-14,-28,-19,-17,-25,-24,-27,-18,-22,-15,-16,-21,-20,-26,-23,-13,]),'TkMayor':([14,23,25,26,28,29,30,32,35,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,77,78,79,86,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[47,-4,-5,-3,-6,-11,-10,76,76,76,-6,76,-48,-44,-49,-45,-46,-43,-47,47,76,-7,-8,76,76,76,-9,76,-42,-12,-14,-28,-19,-17,-25,-24,76,-18,-22,-15,-16,76,76,76,-23,-13,76,76,76,76,]),'TkMayorIgual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,113,114,126,128,],[-4,-5,-3,-6,-11,-10,65,65,65,-6,65,65,-7,-8,65,65,65,-9,65,-12,-14,-28,-19,-17,-25,-24,65,-18,-22,-15,-16,65,65,65,-23,-13,65,65,65,65,]),'TkCorcheteAbre':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,115,120,124,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,124,33,33,]),'TkInspeccion':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'tipo':([54,],[88,]),'semicoloninst':([12,21,43,87,106,112,125,127,133,],[41,41,41,41,41,41,41,41,41,]),'declist':([4,56,],[17,93,]),'varlist':([4,55,56,],[18,92,18,]),'instruccion':([2,5,13,40,53,72,80,117,121,130,],[11,11,11,83,11,11,11,11,11,11,]),'ident_tape':([115,],[122,]),'instlist':([2,5,13,53,72,80,117,121,130,],[12,21,43,87,106,112,125,127,133,]),'programa':([0,],[3,]),'exp':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[32,35,37,39,52,58,59,60,61,77,78,79,96,97,98,99,100,101,102,103,104,105,107,108,109,110,113,114,126,128,]),'exp_un':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,120,124,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'simb_tape':([14,51,],[49,86,]),'dec':([4,56,],[20,20,]),'lista_tape':([14,],[51,]),'declaracion':([0,2,5,13,40,53,72,80,117,121,130,],[1,16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracion TkExecute instlist TkDone','programa',4,'p_programa','./ContBrainiac.py',600),
  ('programa -> TkExecute instlist TkDone','programa',3,'p_programa','./ContBrainiac.py',601),
  ('term -> TkNum','term',1,'p_term_num','./ContBrainiac.py',610),
  ('term -> TkTrue','term',1,'p_term_bool','./ContBrainiac.py',617),
  ('term -> TkFalse','term',1,'p_term_bool','./ContBrainiac.py',618),
  ('term -> TkIdent','term',1,'p_term_ident','./ContBrainiac.py',624),
  ('exp_un -> TkResta exp','exp_un',2,'p_exp_un','./ContBrainiac.py',632),
  ('exp_un -> TkNegacion exp','exp_un',2,'p_exp_un','./ContBrainiac.py',633),
  ('exp_un -> TkInspeccion exp','exp_un',2,'p_exp_un','./ContBrainiac.py',634),
  ('exp -> term','exp',1,'p_exp','./ContBrainiac.py',640),
  ('exp -> exp_un','exp',1,'p_exp','./ContBrainiac.py',641),
  ('exp -> TkParAbre exp TkParCierra','exp',3,'p_exp','./ContBrainiac.py',642),
  ('exp -> TkCorcheteAbre exp TkCorcheteCierra','exp',3,'p_exp','./ContBrainiac.py',643),
  ('exp -> TkLlaveAbre exp TkLlaveCierra','exp',3,'p_exp','./ContBrainiac.py',644),
  ('exp -> exp TkMas exp','exp',3,'p_exp','./ContBrainiac.py',645),
  ('exp -> exp TkMult exp','exp',3,'p_exp','./ContBrainiac.py',646),
  ('exp -> exp TkMod exp','exp',3,'p_exp','./ContBrainiac.py',647),
  ('exp -> exp TkDiv exp','exp',3,'p_exp','./ContBrainiac.py',648),
  ('exp -> exp TkResta exp','exp',3,'p_exp','./ContBrainiac.py',649),
  ('exp -> exp TkIgual exp','exp',3,'p_exp','./ContBrainiac.py',650),
  ('exp -> exp TkDesigual exp','exp',3,'p_exp','./ContBrainiac.py',651),
  ('exp -> exp TkMenor exp','exp',3,'p_exp','./ContBrainiac.py',652),
  ('exp -> exp TkMayor exp','exp',3,'p_exp','./ContBrainiac.py',653),
  ('exp -> exp TkMenorIgual exp','exp',3,'p_exp','./ContBrainiac.py',654),
  ('exp -> exp TkMayorIgual exp','exp',3,'p_exp','./ContBrainiac.py',655),
  ('exp -> exp TkDisyuncion exp','exp',3,'p_exp','./ContBrainiac.py',656),
  ('exp -> exp TkConjuncion exp','exp',3,'p_exp','./ContBrainiac.py',657),
  ('exp -> exp TkConcat exp','exp',3,'p_exp','./ContBrainiac.py',658),
  ('instruccion -> TkIdent TkAsignacion exp','instruccion',3,'p_instruccion_asignacion','./ContBrainiac.py',672),
  ('instruccion -> TkRead exp','instruccion',2,'p_instruccion_read','./ContBrainiac.py',679),
  ('instruccion -> TkWrite exp','instruccion',2,'p_instruccion_write','./ContBrainiac.py',686),
  ('instruccion -> TkWhile exp TkDo instlist TkDone','instruccion',5,'p_instruccion_while','./ContBrainiac.py',692),
  ('instruccion -> TkFor TkIdent TkFrom exp TkTo exp TkDo instlist TkDone','instruccion',9,'p_instruccion_for','./ContBrainiac.py',699),
  ('instruccion -> TkFor exp TkTo exp TkDo instlist TkDone','instruccion',7,'p_instruccion_for','./ContBrainiac.py',700),
  ('instruccion -> TkIf exp TkThen instlist TkDone','instruccion',5,'p_instruccion_if','./ContBrainiac.py',710),
  ('instruccion -> TkIf exp TkThen instlist TkElse instlist TkDone','instruccion',7,'p_instruccion_if','./ContBrainiac.py',711),
  ('instruccion -> declaracion TkExecute instlist TkDone','instruccion',4,'p_instruccion_bloque','./ContBrainiac.py',721),
  ('instruccion -> TkExecute instlist TkDone','instruccion',3,'p_instruccion_bloque','./ContBrainiac.py',722),
  ('instruccion -> TkLlaveAbre lista_tape TkLlaveCierra TkAt ident_tape','instruccion',5,'p_instruccion_b','./ContBrainiac.py',732),
  ('ident_tape -> TkCorcheteAbre exp TkCorcheteCierra','ident_tape',3,'p_ident_tape','./ContBrainiac.py',736),
  ('ident_tape -> TkIdent','ident_tape',1,'p_ident_tape','./ContBrainiac.py',737),
  ('lista_tape -> lista_tape simb_tape','lista_tape',2,'p_lista_tape','./ContBrainiac.py',746),
  ('lista_tape -> simb_tape','lista_tape',1,'p_lista_tape','./ContBrainiac.py',747),
  ('simb_tape -> TkPunto','simb_tape',1,'p_simb_tape','./ContBrainiac.py',756),
  ('simb_tape -> TkMayor','simb_tape',1,'p_simb_tape','./ContBrainiac.py',757),
  ('simb_tape -> TkMenor','simb_tape',1,'p_simb_tape','./ContBrainiac.py',758),
  ('simb_tape -> TkMas','simb_tape',1,'p_simb_tape','./ContBrainiac.py',759),
  ('simb_tape -> TkResta','simb_tape',1,'p_simb_tape','./ContBrainiac.py',760),
  ('simb_tape -> TkComa','simb_tape',1,'p_simb_tape','./ContBrainiac.py',761),
  ('instlist -> instlist semicoloninst','instlist',2,'p_instlist','./ContBrainiac.py',767),
  ('instlist -> instruccion','instlist',1,'p_instlist','./ContBrainiac.py',768),
  ('semicoloninst -> TkPuntoYComa instruccion','semicoloninst',2,'p_commainst','./ContBrainiac.py',777),
  ('declaracion -> TkDeclare declist','declaracion',2,'p_declaracion','./ContBrainiac.py',783),
  ('declist -> dec TkPuntoYComa declist','declist',3,'p_declist','./ContBrainiac.py',787),
  ('declist -> dec','declist',1,'p_declist','./ContBrainiac.py',788),
  ('dec -> varlist TkType tipo','dec',3,'p_dec','./ContBrainiac.py',797),
  ('varlist -> TkIdent TkComa varlist','varlist',3,'p_varlist','./ContBrainiac.py',801),
  ('varlist -> TkIdent','varlist',1,'p_varlist','./ContBrainiac.py',802),
  ('tipo -> TkInteger','tipo',1,'p_tipo','./ContBrainiac.py',811),
  ('tipo -> TkBoolean','tipo',1,'p_tipo','./ContBrainiac.py',812),
  ('tipo -> TkTape','tipo',1,'p_tipo','./ContBrainiac.py',813),
]
