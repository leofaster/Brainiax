
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb38\xcdMSoAI7\xe9dI\xf0\xfb\xeb;'
    
_lr_action_items = {'TkTrue':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TkMod':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,54,54,54,54,54,-5,-6,54,54,54,54,-11,-13,54,-16,-25,54,54,54,-17,54,-15,54,54,-29,54,-26,54,54,-12,54,]),'TkIf':([2,5,12,36,42,70,73,106,110,],[13,13,13,13,13,13,13,13,13,]),'TkResta':([8,10,13,14,21,23,24,25,26,27,28,29,30,31,32,33,34,35,40,41,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,108,],[23,23,23,23,23,23,-8,23,-9,-3,23,-4,-10,-7,23,56,23,56,56,56,56,23,-5,-6,56,56,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,56,56,-11,-13,56,-16,-25,-18,56,56,-17,56,-15,56,56,-29,56,-26,-14,56,-12,23,56,]),'TkNegacion':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TkFalse':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TkConjuncion':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,60,60,60,60,60,-5,-6,60,60,60,60,-11,-13,60,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,60,]),'TkNum':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TkParAbre':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'TkDone':([9,11,20,24,26,27,29,30,31,33,37,39,41,47,49,50,71,72,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,107,109,111,112,113,],[-40,38,46,-8,-9,-3,-4,-10,-7,-31,-39,72,-32,-30,-5,-6,-41,-38,103,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,105,107,-37,-33,-35,111,-36,113,-34,]),'TkRead':([2,5,12,36,42,70,73,106,110,],[8,8,8,8,8,8,8,8,8,]),'TkMenorIgual':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,58,58,58,58,58,-5,-6,58,58,58,58,-11,-13,58,-16,-25,-18,-24,-23,-17,58,-15,58,58,-29,-21,-26,-14,-22,-12,58,]),'TkFrom':([22,],[48,]),'TkComa':([18,],[44,]),'TkMas':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,67,67,67,67,67,-5,-6,67,67,67,67,-11,-13,67,-16,-25,-18,67,67,-17,67,-15,67,67,-29,67,-26,-14,67,-12,67,]),'TkIdent':([2,4,5,7,8,10,12,13,14,21,23,25,28,32,34,36,42,44,45,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,73,104,106,110,],[6,18,6,22,29,29,6,29,29,29,29,29,29,29,29,6,6,18,18,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,6,6,29,6,6,]),'TkMult':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,61,61,61,61,61,-5,-6,61,61,61,61,-11,-13,61,-16,-25,61,61,61,-17,61,-15,61,61,-29,61,-26,61,61,-12,61,]),'TkConcat':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,55,55,55,55,55,-5,-6,55,55,55,55,-11,-13,55,55,-25,55,55,55,55,55,55,55,55,-29,55,-26,55,55,-12,55,]),'TkDisyuncion':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,53,53,53,53,53,-5,-6,53,53,53,53,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,53,]),'TkWhile':([2,5,12,36,42,70,73,106,110,],[10,10,10,10,10,10,10,10,10,]),'TkDeclare':([0,2,5,12,36,42,70,73,106,110,],[4,4,4,4,4,4,4,4,4,4,]),'$end':([3,38,46,],[0,-2,-1,]),'TkPuntoYComa':([9,11,19,20,24,26,27,29,30,31,33,37,39,41,47,49,50,71,72,74,75,76,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,107,109,111,112,113,],[-40,36,45,36,-8,-9,-3,-4,-10,-7,-31,-39,36,-32,-30,-5,-6,-41,-38,36,-45,-49,-48,-50,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,36,36,-37,-33,-35,36,-36,36,-34,]),'TkAsignacion':([6,],[21,]),'TkFor':([2,5,12,36,42,70,73,106,110,],[7,7,7,7,7,7,7,7,7,]),'TkElse':([9,24,26,27,29,30,31,33,37,41,47,49,50,71,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,105,107,111,113,],[-40,-8,-9,-3,-4,-10,-7,-31,-39,-32,-30,-5,-6,-41,-38,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,106,-37,-33,-35,-36,-34,]),'TkLlaveCierra':([24,26,27,29,30,31,49,50,52,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,83,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,]),'TkDesigual':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,63,63,63,63,63,-5,-6,63,63,63,63,-11,-13,63,-16,-25,-18,-24,-23,-17,63,-15,-19,-20,-29,-21,-26,-14,-22,-12,63,]),'TkDiv':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,59,59,59,59,59,-5,-6,59,59,59,59,-11,-13,59,-16,-25,59,59,59,-17,59,-15,59,59,-29,59,-26,59,59,-12,59,]),'TkIgual':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,62,62,62,62,62,-5,-6,62,62,62,62,-11,-13,62,-16,-25,-18,-24,-23,-17,62,-15,-19,-20,-29,-21,-26,-14,-22,-12,62,]),'TkAt':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,64,64,64,64,64,-5,-6,64,64,64,64,-11,-13,64,64,64,64,64,64,64,64,64,64,64,-29,64,64,64,64,-12,64,]),'TkTo':([24,26,27,29,30,31,49,50,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,104,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,]),'TkMenor':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,65,65,65,65,65,-5,-6,65,65,65,65,-11,-13,65,-16,-25,-18,-24,-23,-17,65,-15,65,65,-29,-21,-26,-14,-22,-12,65,]),'TkCorcheteCierra':([24,26,27,29,30,31,49,50,69,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,100,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,]),'TkTape':([43,],[78,]),'TkDo':([24,26,27,29,30,31,35,49,50,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,70,-5,-6,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,110,]),'TkType':([17,18,79,],[43,-47,-46,]),'TkBoolean':([43,],[76,]),'TkParCierra':([24,26,27,29,30,31,49,50,51,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,82,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,]),'TkInteger':([43,],[77,]),'TkExecute':([0,1,2,5,12,15,16,19,36,42,70,73,75,76,77,78,80,106,110,],[2,5,12,12,12,42,-42,-44,12,12,12,12,-45,-49,-48,-50,-43,12,12,]),'TkLlaveAbre':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TkWrite':([2,5,12,36,42,70,73,106,110,],[14,14,14,14,14,14,14,14,14,]),'TkThen':([24,26,27,29,30,31,40,49,50,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,],[-8,-9,-3,-4,-10,-7,73,-5,-6,-11,-13,-27,-16,-25,-18,-24,-23,-17,-28,-15,-19,-20,-29,-21,-26,-14,-22,-12,]),'TkMayor':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,68,68,68,68,68,-5,-6,68,68,68,68,-11,-13,68,-16,-25,-18,-24,-23,-17,68,-15,68,68,-29,-21,-26,-14,-22,-12,68,]),'TkMayorIgual':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,57,57,57,57,57,-5,-6,57,57,57,57,-11,-13,57,-16,-25,-18,-24,-23,-17,57,-15,57,57,-29,-21,-26,-14,-22,-12,57,]),'TkCorcheteAbre':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TkInspeccion':([24,26,27,29,30,31,33,35,40,41,47,49,50,51,52,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,],[-8,-9,-3,-4,-10,-7,66,66,66,66,66,-5,-6,66,66,66,66,-11,-13,66,66,66,66,66,66,66,66,66,66,66,-29,66,-26,66,66,-12,66,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'tipo':([43,],[75,]),'semicoloninst':([11,20,39,74,101,102,109,112,],[37,37,37,37,37,37,37,37,]),'declist':([4,45,],[16,80,]),'varlist':([4,44,45,],[17,79,17,]),'instruccion':([2,5,12,36,42,70,73,106,110,],[9,9,9,71,9,9,9,9,9,]),'instlist':([2,5,12,42,70,73,106,110,],[11,20,39,74,101,102,109,112,]),'programa':([0,],[3,]),'exp':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[33,35,40,41,47,49,50,51,52,69,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,]),'exp_un':([8,10,13,14,21,23,25,28,32,34,48,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,104,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'dec':([4,45,],[19,19,]),'declaracion':([0,2,5,12,36,42,70,73,106,110,],[1,15,15,15,15,15,15,15,15,15,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracion TkExecute instlist TkDone','programa',4,'p_programa','./SintBrainiac.py',561),
  ('programa -> TkExecute instlist TkDone','programa',3,'p_programa','./SintBrainiac.py',562),
  ('term -> TkNum','term',1,'p_term_num','./SintBrainiac.py',571),
  ('term -> TkIdent','term',1,'p_term_ident','./SintBrainiac.py',579),
  ('exp_un -> TkResta exp','exp_un',2,'p_exp_un','./SintBrainiac.py',587),
  ('exp_un -> TkNegacion exp','exp_un',2,'p_exp_un','./SintBrainiac.py',588),
  ('exp -> term','exp',1,'p_exp','./SintBrainiac.py',594),
  ('exp -> TkTrue','exp',1,'p_exp','./SintBrainiac.py',595),
  ('exp -> TkFalse','exp',1,'p_exp','./SintBrainiac.py',596),
  ('exp -> exp_un','exp',1,'p_exp','./SintBrainiac.py',597),
  ('exp -> TkParAbre exp TkParCierra','exp',3,'p_exp','./SintBrainiac.py',598),
  ('exp -> TkCorcheteAbre exp TkCorcheteCierra','exp',3,'p_exp','./SintBrainiac.py',599),
  ('exp -> TkLlaveAbre exp TkLlaveCierra','exp',3,'p_exp','./SintBrainiac.py',600),
  ('exp -> exp TkMas exp','exp',3,'p_exp','./SintBrainiac.py',601),
  ('exp -> exp TkMult exp','exp',3,'p_exp','./SintBrainiac.py',602),
  ('exp -> exp TkMod exp','exp',3,'p_exp','./SintBrainiac.py',603),
  ('exp -> exp TkDiv exp','exp',3,'p_exp','./SintBrainiac.py',604),
  ('exp -> exp TkResta exp','exp',3,'p_exp','./SintBrainiac.py',605),
  ('exp -> exp TkIgual exp','exp',3,'p_exp','./SintBrainiac.py',606),
  ('exp -> exp TkDesigual exp','exp',3,'p_exp','./SintBrainiac.py',607),
  ('exp -> exp TkMenor exp','exp',3,'p_exp','./SintBrainiac.py',608),
  ('exp -> exp TkMayor exp','exp',3,'p_exp','./SintBrainiac.py',609),
  ('exp -> exp TkMenorIgual exp','exp',3,'p_exp','./SintBrainiac.py',610),
  ('exp -> exp TkMayorIgual exp','exp',3,'p_exp','./SintBrainiac.py',611),
  ('exp -> exp TkConcat exp','exp',3,'p_exp','./SintBrainiac.py',612),
  ('exp -> exp TkInspeccion exp','exp',3,'p_exp','./SintBrainiac.py',613),
  ('exp -> exp TkDisyuncion exp','exp',3,'p_exp','./SintBrainiac.py',614),
  ('exp -> exp TkConjuncion exp','exp',3,'p_exp','./SintBrainiac.py',615),
  ('exp -> exp TkAt exp','exp',3,'p_exp','./SintBrainiac.py',616),
  ('instruccion -> TkIdent TkAsignacion exp','instruccion',3,'p_instruccion_asignacion','./SintBrainiac.py',628),
  ('instruccion -> TkRead exp','instruccion',2,'p_instruccion_read','./SintBrainiac.py',634),
  ('instruccion -> TkWrite exp','instruccion',2,'p_instruccion_write','./SintBrainiac.py',640),
  ('instruccion -> TkWhile exp TkDo instlist TkDone','instruccion',5,'p_instruccion_while','./SintBrainiac.py',646),
  ('instruccion -> TkFor TkIdent TkFrom exp TkTo exp TkDo instlist TkDone','instruccion',9,'p_instruccion_for','./SintBrainiac.py',652),
  ('instruccion -> TkIf exp TkThen instlist TkDone','instruccion',5,'p_instruccion_if','./SintBrainiac.py',657),
  ('instruccion -> TkIf exp TkThen instlist TkElse instlist TkDone','instruccion',7,'p_instruccion_if','./SintBrainiac.py',658),
  ('instruccion -> declaracion TkExecute instlist TkDone','instruccion',4,'p_instruccion_bloque','./SintBrainiac.py',667),
  ('instruccion -> TkExecute instlist TkDone','instruccion',3,'p_instruccion_bloque','./SintBrainiac.py',668),
  ('instlist -> instlist semicoloninst','instlist',2,'p_instlist','./SintBrainiac.py',677),
  ('instlist -> instruccion','instlist',1,'p_instlist','./SintBrainiac.py',678),
  ('semicoloninst -> TkPuntoYComa instruccion','semicoloninst',2,'p_commainst','./SintBrainiac.py',687),
  ('declaracion -> TkDeclare declist','declaracion',2,'p_declaracion','./SintBrainiac.py',693),
  ('declist -> dec TkPuntoYComa declist','declist',3,'p_declist','./SintBrainiac.py',696),
  ('declist -> dec','declist',1,'p_declist','./SintBrainiac.py',697),
  ('dec -> varlist TkType tipo','dec',3,'p_dec','./SintBrainiac.py',700),
  ('varlist -> TkIdent TkComa varlist','varlist',3,'p_varlist','./SintBrainiac.py',703),
  ('varlist -> TkIdent','varlist',1,'p_varlist','./SintBrainiac.py',704),
  ('tipo -> TkInteger','tipo',1,'p_tipo_int','./SintBrainiac.py',707),
  ('tipo -> TkBoolean','tipo',1,'p_tipo_bool','./SintBrainiac.py',710),
  ('tipo -> TkTape','tipo',1,'p_tipo_tape','./SintBrainiac.py',713),
]
