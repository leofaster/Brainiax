
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\x06\x7fqi\xec\xcf|V\x89\xc3\x9b\xe5\xc1\x98'\x02"
    
_lr_action_items = {'TkTrue':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'TkMod':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,52,52,52,-5,-6,52,52,52,52,-11,-13,52,-16,52,52,52,-15,-25,52,52,52,-17,52,-29,52,52,-26,-12,52,52,]),'TkIf':([2,5,13,37,42,66,70,104,111,],[6,6,6,6,6,6,6,6,6,]),'TkResta':([6,7,9,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,107,109,],[22,22,22,-8,22,22,-9,-3,22,-4,-10,-7,22,51,22,51,22,51,-5,-6,51,51,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,51,51,22,-11,-13,-18,-16,51,-14,51,-15,-25,51,51,51,-17,51,-29,51,51,-26,-12,51,22,51,]),'TkNegacion':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TkFalse':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TkConjuncion':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,53,53,53,-5,-6,53,53,53,53,-11,-13,-18,-16,-28,-14,-23,-15,-25,53,-22,-20,-17,-19,-29,-21,-24,-26,-12,53,53,]),'TkNum':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TkParAbre':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TkDone':([11,12,20,21,24,25,27,28,29,33,38,40,41,47,48,69,72,73,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,106,108,110,112,113,],[-40,39,46,-8,-9,-3,-4,-10,-7,-31,-39,73,-32,-5,-6,-30,-41,-38,103,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,105,-26,-12,106,-37,-35,-33,110,-36,113,-34,]),'TkRead':([2,5,13,37,42,66,70,104,111,],[7,7,7,7,7,7,7,7,7,]),'TkMenorIgual':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,55,55,55,-5,-6,55,55,55,55,-11,-13,-18,-16,55,-14,-23,-15,-25,55,-22,55,-17,55,-29,-21,-24,-26,-12,55,55,]),'TkFrom':([36,],[71,]),'TkComa':([18,],[44,]),'TkMas':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,54,54,54,-5,-6,54,54,54,54,-11,-13,-18,-16,54,-14,54,-15,-25,54,54,54,-17,54,-29,54,54,-26,-12,54,54,]),'TkIdent':([2,4,5,6,7,9,10,13,22,23,26,30,32,34,37,42,44,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,104,107,111,],[8,18,8,27,27,27,36,8,27,27,27,27,27,27,8,8,18,18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,8,27,8,27,8,27,8,]),'TkMult':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,56,56,56,-5,-6,56,56,56,56,-11,-13,56,-16,56,56,56,-15,-25,56,56,56,-17,56,-29,56,56,-26,-12,56,56,]),'TkConcat':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,57,57,57,-5,-6,57,57,57,57,-11,-13,57,57,57,57,57,57,-25,57,57,57,57,57,-29,57,57,-26,-12,57,57,]),'TkDisyuncion':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,58,58,58,-5,-6,58,58,58,58,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,58,58,]),'TkWhile':([2,5,13,37,42,66,70,104,111,],[9,9,9,9,9,9,9,9,9,]),'TkDeclare':([0,2,5,13,37,42,66,70,104,111,],[4,4,4,4,4,4,4,4,4,4,]),'$end':([3,39,46,],[0,-2,-1,]),'TkPuntoYComa':([11,12,19,20,21,24,25,27,28,29,33,38,40,41,47,48,69,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,105,106,110,113,],[-40,37,45,37,-8,-9,-3,-4,-10,-7,-31,-39,37,-32,-5,-6,-30,-41,-38,37,-45,-49,-48,-50,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,-37,-35,-33,-36,-34,]),'TkAsignacion':([8,],[34,]),'TkFor':([2,5,13,37,42,66,70,104,111,],[10,10,10,10,10,10,10,10,10,]),'TkElse':([21,24,25,27,28,29,33,41,47,48,69,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,105,106,110,113,],[-8,-9,-3,-4,-10,-7,-31,-32,-5,-6,-30,-38,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,104,-26,-12,-37,-35,-33,-36,-34,]),'TkLlaveCierra':([21,24,25,27,28,29,47,48,50,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,82,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,]),'TkDesigual':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,60,60,60,-5,-6,60,60,60,60,-11,-13,-18,-16,60,-14,-23,-15,-25,60,-22,-20,-17,-19,-29,-21,-24,-26,-12,60,60,]),'TkDiv':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,61,61,61,-5,-6,61,61,61,61,-11,-13,61,-16,61,61,61,-15,-25,61,61,61,-17,61,-29,61,61,-26,-12,61,61,]),'TkIgual':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,62,62,62,-5,-6,62,62,62,62,-11,-13,-18,-16,62,-14,-23,-15,-25,62,-22,-20,-17,-19,-29,-21,-24,-26,-12,62,62,]),'TkAt':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,63,63,63,-5,-6,63,63,63,63,-11,-13,63,63,63,63,63,63,63,63,63,63,63,63,-29,63,63,63,-12,63,63,]),'TkTo':([21,24,25,27,28,29,47,48,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,],[-8,-9,-3,-4,-10,-7,-5,-6,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,107,]),'TkMenor':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,64,64,64,-5,-6,64,64,64,64,-11,-13,-18,-16,64,-14,-23,-15,-25,64,-22,64,-17,64,-29,-21,-24,-26,-12,64,64,]),'TkCorcheteCierra':([21,24,25,27,28,29,47,48,68,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,100,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,]),'TkTape':([43,],[78,]),'TkCadena':([14,],[41,]),'TkDo':([21,24,25,27,28,29,35,47,48,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,109,],[-8,-9,-3,-4,-10,-7,70,-5,-6,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,111,]),'TkType':([17,18,79,],[43,-47,-46,]),'TkBoolean':([43,],[76,]),'TkParCierra':([21,24,25,27,28,29,47,48,49,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,],[-8,-9,-3,-4,-10,-7,-5,-6,81,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,]),'TkInteger':([43,],[77,]),'TkExecute':([0,1,2,5,13,15,16,19,37,42,66,70,75,76,77,78,80,104,111,],[2,5,13,13,13,42,-42,-44,13,13,13,13,-45,-49,-48,-50,-43,13,13,]),'TkLlaveAbre':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TkWrite':([2,5,13,37,42,66,70,104,111,],[14,14,14,14,14,14,14,14,14,]),'TkThen':([21,24,25,27,28,29,31,47,48,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,],[-8,-9,-3,-4,-10,-7,66,-5,-6,-11,-13,-18,-16,-28,-14,-23,-15,-25,-27,-22,-20,-17,-19,-29,-21,-24,-26,-12,]),'TkMayor':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,59,59,59,-5,-6,59,59,59,59,-11,-13,-18,-16,59,-14,-23,-15,-25,59,-22,59,-17,59,-29,-21,-24,-26,-12,59,59,]),'TkMayorIgual':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,65,65,65,-5,-6,65,65,65,65,-11,-13,-18,-16,65,-14,-23,-15,-25,65,-22,65,-17,65,-29,-21,-24,-26,-12,65,65,]),'TkCorcheteAbre':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TkInspeccion':([21,24,25,27,28,29,31,33,35,47,48,49,50,68,69,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,102,109,],[-8,-9,-3,-4,-10,-7,67,67,67,-5,-6,67,67,67,67,-11,-13,67,67,67,67,67,67,67,67,67,67,67,67,-29,67,67,-26,-12,67,67,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'tipo':([43,],[75,]),'semicoloninst':([12,20,40,74,],[38,38,38,38,]),'declist':([4,45,],[16,80,]),'varlist':([4,44,45,],[17,79,17,]),'instruccion':([2,5,13,37,42,66,70,104,111,],[11,11,11,72,11,98,101,108,112,]),'instlist':([2,5,13,42,],[12,20,40,74,]),'programa':([0,],[3,]),'exp':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[31,33,35,47,48,49,50,68,69,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,102,109,]),'exp_un':([6,7,9,22,23,26,30,32,34,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,71,107,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'dec':([4,45,],[19,19,]),'declaracion':([0,2,5,13,37,42,66,70,104,111,],[1,15,15,15,15,15,15,15,15,15,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracion TkExecute instlist TkDone','programa',4,'p_programa','./SintBrainiac.py',564),
  ('programa -> TkExecute instlist TkDone','programa',3,'p_programa','./SintBrainiac.py',565),
  ('term -> TkNum','term',1,'p_term_num','./SintBrainiac.py',574),
  ('term -> TkIdent','term',1,'p_term_ident','./SintBrainiac.py',582),
  ('exp_un -> TkResta exp','exp_un',2,'p_exp_un','./SintBrainiac.py',590),
  ('exp_un -> TkNegacion exp','exp_un',2,'p_exp_un','./SintBrainiac.py',591),
  ('exp -> term','exp',1,'p_exp','./SintBrainiac.py',597),
  ('exp -> TkTrue','exp',1,'p_exp','./SintBrainiac.py',598),
  ('exp -> TkFalse','exp',1,'p_exp','./SintBrainiac.py',599),
  ('exp -> exp_un','exp',1,'p_exp','./SintBrainiac.py',600),
  ('exp -> TkParAbre exp TkParCierra','exp',3,'p_exp','./SintBrainiac.py',601),
  ('exp -> TkCorcheteAbre exp TkCorcheteCierra','exp',3,'p_exp','./SintBrainiac.py',602),
  ('exp -> TkLlaveAbre exp TkLlaveCierra','exp',3,'p_exp','./SintBrainiac.py',603),
  ('exp -> exp TkMas exp','exp',3,'p_exp','./SintBrainiac.py',604),
  ('exp -> exp TkMult exp','exp',3,'p_exp','./SintBrainiac.py',605),
  ('exp -> exp TkMod exp','exp',3,'p_exp','./SintBrainiac.py',606),
  ('exp -> exp TkDiv exp','exp',3,'p_exp','./SintBrainiac.py',607),
  ('exp -> exp TkResta exp','exp',3,'p_exp','./SintBrainiac.py',608),
  ('exp -> exp TkIgual exp','exp',3,'p_exp','./SintBrainiac.py',609),
  ('exp -> exp TkDesigual exp','exp',3,'p_exp','./SintBrainiac.py',610),
  ('exp -> exp TkMenor exp','exp',3,'p_exp','./SintBrainiac.py',611),
  ('exp -> exp TkMayor exp','exp',3,'p_exp','./SintBrainiac.py',612),
  ('exp -> exp TkMenorIgual exp','exp',3,'p_exp','./SintBrainiac.py',613),
  ('exp -> exp TkMayorIgual exp','exp',3,'p_exp','./SintBrainiac.py',614),
  ('exp -> exp TkConcat exp','exp',3,'p_exp','./SintBrainiac.py',615),
  ('exp -> exp TkInspeccion exp','exp',3,'p_exp','./SintBrainiac.py',616),
  ('exp -> exp TkDisyuncion exp','exp',3,'p_exp','./SintBrainiac.py',617),
  ('exp -> exp TkConjuncion exp','exp',3,'p_exp','./SintBrainiac.py',618),
  ('exp -> exp TkAt exp','exp',3,'p_exp','./SintBrainiac.py',619),
  ('instruccion -> TkIdent TkAsignacion exp','instruccion',3,'p_instruccion_asignacion','./SintBrainiac.py',631),
  ('instruccion -> TkRead exp','instruccion',2,'p_instruccion_read','./SintBrainiac.py',637),
  ('instruccion -> TkWrite TkCadena','instruccion',2,'p_instruccion_write','./SintBrainiac.py',643),
  ('instruccion -> TkWhile exp TkDo instruccion TkDone','instruccion',5,'p_instruccion_while','./SintBrainiac.py',665),
  ('instruccion -> TkFor TkIdent TkFrom exp TkTo exp TkDo instruccion TkDone','instruccion',9,'p_instruccion_for','./SintBrainiac.py',671),
  ('instruccion -> TkIf exp TkThen instruccion TkDone','instruccion',5,'p_instruccion_if','./SintBrainiac.py',676),
  ('instruccion -> TkIf exp TkThen instruccion TkElse instruccion TkDone','instruccion',7,'p_instruccion_if','./SintBrainiac.py',677),
  ('instruccion -> declaracion TkExecute instlist TkDone','instruccion',4,'p_instruction_bloque','./SintBrainiac.py',686),
  ('instruccion -> TkExecute instlist TkDone','instruccion',3,'p_instruction_bloque','./SintBrainiac.py',687),
  ('instlist -> instlist semicoloninst','instlist',2,'p_instlist','./SintBrainiac.py',696),
  ('instlist -> instruccion','instlist',1,'p_instlist','./SintBrainiac.py',697),
  ('semicoloninst -> TkPuntoYComa instruccion','semicoloninst',2,'p_commainst','./SintBrainiac.py',706),
  ('declaracion -> TkDeclare declist','declaracion',2,'p_declaracion','./SintBrainiac.py',712),
  ('declist -> dec TkPuntoYComa declist','declist',3,'p_declist','./SintBrainiac.py',715),
  ('declist -> dec','declist',1,'p_declist','./SintBrainiac.py',716),
  ('dec -> varlist TkType tipo','dec',3,'p_dec','./SintBrainiac.py',719),
  ('varlist -> TkIdent TkComa varlist','varlist',3,'p_varlist','./SintBrainiac.py',722),
  ('varlist -> TkIdent','varlist',1,'p_varlist','./SintBrainiac.py',723),
  ('tipo -> TkInteger','tipo',1,'p_tipo_int','./SintBrainiac.py',726),
  ('tipo -> TkBoolean','tipo',1,'p_tipo_bool','./SintBrainiac.py',729),
  ('tipo -> TkTape','tipo',1,'p_tipo_tape','./SintBrainiac.py',732),
]
