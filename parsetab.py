
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xaca\xcd\xael\x8f\xd0G\xfa\xee\xa5\xc2\xf0F\x9e\x93'
    
_lr_action_items = {'TkTrue':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TkMod':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,63,63,63,63,-5,-6,63,63,63,-7,63,-10,-12,-28,63,-15,63,63,63,-16,63,63,-14,63,63,63,63,-11,63,63,63,]),'TkIf':([2,5,13,39,52,71,79,114,125,],[6,6,6,6,6,6,6,6,6,]),'TkResta':([6,7,9,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,80,84,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,117,120,122,123,],[22,22,22,43,22,22,-18,22,-19,-3,22,-4,-9,-8,22,62,22,22,62,22,62,-47,-43,-48,-44,-45,-42,-46,43,62,-5,-6,62,62,22,22,22,22,22,22,22,22,22,22,22,22,22,22,62,-7,62,22,-41,-10,-12,-28,-17,-15,62,62,62,-16,62,-13,-14,62,62,62,62,-11,62,22,22,62,62,]),'TkNegacion':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TkFalse':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TkConjuncion':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,66,66,66,66,-5,-6,66,66,66,-7,66,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,66,-23,-11,66,66,66,]),'TkNum':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TkParAbre':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TkDone':([11,12,21,23,25,26,28,29,30,35,40,42,51,57,58,77,78,81,82,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,115,116,118,119,121,124,126,127,128,],[-50,41,56,-18,-19,-3,-4,-9,-8,-30,-49,82,-31,-5,-6,-7,-29,-51,-37,113,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,115,-21,-20,-26,-23,-11,116,-36,-34,-32,-38,-40,124,-35,-39,128,-33,]),'TkRead':([2,5,13,39,52,71,79,114,125,],[7,7,7,7,7,7,7,7,7,]),'TkMenorIgual':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,65,65,65,65,-5,-6,65,65,65,-7,65,-10,-12,-28,-17,-15,-25,-24,65,-16,-22,-13,-14,65,65,65,-23,-11,65,65,65,]),'TkFrom':([38,],[80,]),'TkComa':([14,19,43,44,45,46,47,48,49,50,84,],[45,54,-47,-43,-48,-44,-45,-42,-46,45,-41,]),'TkMas':([14,23,25,26,28,29,30,32,35,37,43,44,45,46,47,48,49,50,51,57,58,59,60,76,77,78,84,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[49,-18,-19,-3,-4,-9,-8,69,69,69,-47,-43,-48,-44,-45,-42,-46,49,69,-5,-6,69,69,69,-7,69,-41,-10,-12,-28,-17,-15,69,69,69,-16,69,-13,-14,69,69,69,69,-11,69,69,69,]),'TkIdent':([2,4,5,6,7,9,10,13,15,22,24,27,31,33,34,36,39,52,54,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,112,114,117,120,125,],[8,19,8,28,28,28,38,8,28,28,28,28,28,28,28,28,8,8,19,19,28,28,28,28,28,28,28,28,28,28,8,28,28,28,28,8,28,119,8,28,28,8,]),'TkMult':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,70,70,70,70,-5,-6,70,70,70,-7,70,-10,-12,-28,70,-15,70,70,70,-16,70,70,-14,70,70,70,70,-11,70,70,70,]),'TkConcat':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,61,61,61,61,-5,-6,61,61,61,-7,61,-10,-12,-28,61,61,61,61,61,61,61,61,61,61,61,61,61,-11,61,61,61,]),'TkDisyuncion':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,74,74,74,74,-5,-6,74,74,74,-7,74,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,74,74,74,]),'TkWhile':([2,5,13,39,52,71,79,114,125,],[9,9,9,9,9,9,9,9,9,]),'TkDeclare':([0,2,5,13,39,52,71,79,114,125,],[4,4,4,4,4,4,4,4,4,4,]),'$end':([3,41,56,],[0,-2,-1,]),'TkPuntoYComa':([11,12,20,21,23,25,26,28,29,30,35,40,42,51,57,58,77,78,81,82,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,115,116,118,119,121,124,126,127,128,],[-50,39,55,39,-18,-19,-3,-4,-9,-8,-30,-49,39,-31,-5,-6,-7,-29,-51,-37,39,-55,-59,-58,-60,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,39,-21,-20,-26,-23,-11,39,-36,-34,-32,-38,-40,39,-35,-39,39,-33,]),'TkAsignacion':([8,],[36,]),'TkPunto':([14,43,44,45,46,47,48,49,50,84,],[44,-47,-43,-48,-44,-45,-42,-46,44,-41,]),'TkFor':([2,5,13,39,52,71,79,114,125,],[10,10,10,10,10,10,10,10,10,]),'TkElse':([11,23,25,26,28,29,30,35,40,51,57,58,77,78,81,82,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,116,118,119,124,126,128,],[-50,-18,-19,-3,-4,-9,-8,-30,-49,-31,-5,-6,-7,-29,-51,-37,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,114,-21,-20,-26,-23,-11,-36,-34,-32,-38,-40,-35,-39,-33,]),'TkLlaveCierra':([23,25,26,28,29,30,43,44,45,46,47,48,49,50,57,58,60,77,84,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,],[-18,-19,-3,-4,-9,-8,-47,-43,-48,-44,-45,-42,-46,83,-5,-6,93,-7,-41,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,]),'TkDesigual':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,72,72,72,72,-5,-6,72,72,72,-7,72,-10,-12,-28,-17,-15,-25,-24,72,-16,-22,-13,-14,-21,-20,72,-23,-11,72,72,72,]),'TkDiv':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,67,67,67,67,-5,-6,67,67,67,-7,67,-10,-12,-28,67,-15,67,67,67,-16,67,67,-14,67,67,67,67,-11,67,67,67,]),'TkIgual':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,73,73,73,73,-5,-6,73,73,73,-7,73,-10,-12,-28,-17,-15,-25,-24,73,-16,-22,-13,-14,-21,-20,73,-23,-11,73,73,73,]),'TkAt':([83,],[112,]),'TkTo':([23,25,26,28,29,30,57,58,77,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,],[-18,-19,-3,-4,-9,-8,-5,-6,-7,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,117,]),'TkMenor':([14,23,25,26,28,29,30,32,35,37,43,44,45,46,47,48,49,50,51,57,58,59,60,76,77,78,84,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[47,-18,-19,-3,-4,-9,-8,68,68,68,-47,-43,-48,-44,-45,-42,-46,47,68,-5,-6,68,68,68,-7,68,-41,-10,-12,-28,-17,-15,-25,-24,68,-16,-22,-13,-14,68,68,68,-23,-11,68,68,68,]),'TkCorcheteCierra':([23,25,26,28,29,30,57,58,76,77,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,123,],[-18,-19,-3,-4,-9,-8,-5,-6,109,-7,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,126,]),'TkTape':([53,],[89,]),'TkDo':([23,25,26,28,29,30,37,57,58,77,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,122,],[-18,-19,-3,-4,-9,-8,79,-5,-6,-7,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,125,]),'TkType':([18,19,90,],[53,-57,-56,]),'TkBoolean':([53,],[87,]),'TkParCierra':([23,25,26,28,29,30,57,58,59,77,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,],[-18,-19,-3,-4,-9,-8,-5,-6,92,-7,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,]),'TkInteger':([53,],[88,]),'TkExecute':([0,1,2,5,13,16,17,20,39,52,71,79,86,87,88,89,91,114,125,],[2,5,13,13,13,52,-52,-54,13,13,13,13,-55,-59,-58,-60,-53,13,13,]),'TkLlaveAbre':([2,5,6,7,9,13,15,22,24,27,31,33,34,36,39,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,114,117,120,125,],[14,14,31,31,31,14,31,31,31,31,31,31,31,31,14,14,31,31,31,31,31,31,31,31,31,31,14,31,31,31,31,14,31,14,31,31,14,]),'TkWrite':([2,5,13,39,52,71,79,114,125,],[15,15,15,15,15,15,15,15,15,]),'TkThen':([23,25,26,28,29,30,32,57,58,77,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,],[-18,-19,-3,-4,-9,-8,71,-5,-6,-7,-10,-12,-28,-17,-15,-25,-24,-27,-16,-22,-13,-14,-21,-20,-26,-23,-11,]),'TkMayor':([14,23,25,26,28,29,30,32,35,37,43,44,45,46,47,48,49,50,51,57,58,59,60,76,77,78,84,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[46,-18,-19,-3,-4,-9,-8,75,75,75,-47,-43,-48,-44,-45,-42,-46,46,75,-5,-6,75,75,75,-7,75,-41,-10,-12,-28,-17,-15,-25,-24,75,-16,-22,-13,-14,75,75,75,-23,-11,75,75,75,]),'TkMayorIgual':([23,25,26,28,29,30,32,35,37,51,57,58,59,60,76,77,78,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,111,122,123,],[-18,-19,-3,-4,-9,-8,64,64,64,64,-5,-6,64,64,64,-7,64,-10,-12,-28,-17,-15,-25,-24,64,-16,-22,-13,-14,64,64,64,-23,-11,64,64,64,]),'TkCorcheteAbre':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,112,117,120,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,120,33,33,]),'TkInspeccion':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'tipo':([53,],[86,]),'semicoloninst':([12,21,42,85,104,110,121,127,],[40,40,40,40,40,40,40,40,]),'declist':([4,55,],[17,91,]),'varlist':([4,54,55,],[18,90,18,]),'instruccion':([2,5,13,39,52,71,79,114,125,],[11,11,11,81,11,11,11,11,11,]),'ident_tape':([112,],[118,]),'instlist':([2,5,13,52,71,79,114,125,],[12,21,42,85,104,110,121,127,]),'programa':([0,],[3,]),'exp':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[32,35,37,51,57,58,59,60,76,77,78,94,95,96,97,98,99,100,101,102,103,105,106,107,108,111,122,123,]),'exp_un':([6,7,9,15,22,24,27,31,33,34,36,61,62,63,64,65,66,67,68,69,70,72,73,74,75,80,117,120,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'simb_tape':([14,50,],[48,84,]),'dec':([4,55,],[20,20,]),'lista_tape':([14,],[50,]),'declaracion':([0,2,5,13,39,52,71,79,114,125,],[1,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracion TkExecute instlist TkDone','programa',4,'p_programa','./SintBrainiac.py',582),
  ('programa -> TkExecute instlist TkDone','programa',3,'p_programa','./SintBrainiac.py',583),
  ('term -> TkNum','term',1,'p_term_num','./SintBrainiac.py',592),
  ('term -> TkIdent','term',1,'p_term_ident','./SintBrainiac.py',600),
  ('exp_un -> TkResta exp','exp_un',2,'p_exp_un','./SintBrainiac.py',608),
  ('exp_un -> TkNegacion exp','exp_un',2,'p_exp_un','./SintBrainiac.py',609),
  ('exp_un -> TkInspeccion exp','exp_un',2,'p_exp_un','./SintBrainiac.py',610),
  ('exp -> term','exp',1,'p_exp','./SintBrainiac.py',616),
  ('exp -> exp_un','exp',1,'p_exp','./SintBrainiac.py',617),
  ('exp -> TkParAbre exp TkParCierra','exp',3,'p_exp','./SintBrainiac.py',618),
  ('exp -> TkCorcheteAbre exp TkCorcheteCierra','exp',3,'p_exp','./SintBrainiac.py',619),
  ('exp -> TkLlaveAbre exp TkLlaveCierra','exp',3,'p_exp','./SintBrainiac.py',620),
  ('exp -> exp TkMas exp','exp',3,'p_exp','./SintBrainiac.py',621),
  ('exp -> exp TkMult exp','exp',3,'p_exp','./SintBrainiac.py',622),
  ('exp -> exp TkMod exp','exp',3,'p_exp','./SintBrainiac.py',623),
  ('exp -> exp TkDiv exp','exp',3,'p_exp','./SintBrainiac.py',624),
  ('exp -> exp TkResta exp','exp',3,'p_exp','./SintBrainiac.py',625),
  ('exp -> TkTrue','exp',1,'p_exp','./SintBrainiac.py',626),
  ('exp -> TkFalse','exp',1,'p_exp','./SintBrainiac.py',627),
  ('exp -> exp TkIgual exp','exp',3,'p_exp','./SintBrainiac.py',628),
  ('exp -> exp TkDesigual exp','exp',3,'p_exp','./SintBrainiac.py',629),
  ('exp -> exp TkMenor exp','exp',3,'p_exp','./SintBrainiac.py',630),
  ('exp -> exp TkMayor exp','exp',3,'p_exp','./SintBrainiac.py',631),
  ('exp -> exp TkMenorIgual exp','exp',3,'p_exp','./SintBrainiac.py',632),
  ('exp -> exp TkMayorIgual exp','exp',3,'p_exp','./SintBrainiac.py',633),
  ('exp -> exp TkDisyuncion exp','exp',3,'p_exp','./SintBrainiac.py',634),
  ('exp -> exp TkConjuncion exp','exp',3,'p_exp','./SintBrainiac.py',635),
  ('exp -> exp TkConcat exp','exp',3,'p_exp','./SintBrainiac.py',636),
  ('instruccion -> TkIdent TkAsignacion exp','instruccion',3,'p_instruccion_asignacion','./SintBrainiac.py',648),
  ('instruccion -> TkRead exp','instruccion',2,'p_instruccion_read','./SintBrainiac.py',654),
  ('instruccion -> TkWrite exp','instruccion',2,'p_instruccion_write','./SintBrainiac.py',660),
  ('instruccion -> TkWhile exp TkDo instlist TkDone','instruccion',5,'p_instruccion_while','./SintBrainiac.py',666),
  ('instruccion -> TkFor TkIdent TkFrom exp TkTo exp TkDo instlist TkDone','instruccion',9,'p_instruccion_for','./SintBrainiac.py',672),
  ('instruccion -> TkIf exp TkThen instlist TkDone','instruccion',5,'p_instruccion_if','./SintBrainiac.py',678),
  ('instruccion -> TkIf exp TkThen instlist TkElse instlist TkDone','instruccion',7,'p_instruccion_if','./SintBrainiac.py',679),
  ('instruccion -> declaracion TkExecute instlist TkDone','instruccion',4,'p_instruccion_bloque','./SintBrainiac.py',688),
  ('instruccion -> TkExecute instlist TkDone','instruccion',3,'p_instruccion_bloque','./SintBrainiac.py',689),
  ('instruccion -> TkLlaveAbre lista_tape TkLlaveCierra TkAt ident_tape','instruccion',5,'p_instruccion_b','./SintBrainiac.py',698),
  ('ident_tape -> TkCorcheteAbre exp TkCorcheteCierra','ident_tape',3,'p_ident_tape','./SintBrainiac.py',702),
  ('ident_tape -> TkIdent','ident_tape',1,'p_ident_tape','./SintBrainiac.py',703),
  ('lista_tape -> lista_tape simb_tape','lista_tape',2,'p_lista_tape','./SintBrainiac.py',712),
  ('lista_tape -> simb_tape','lista_tape',1,'p_lista_tape','./SintBrainiac.py',713),
  ('simb_tape -> TkPunto','simb_tape',1,'p_simb_tape','./SintBrainiac.py',722),
  ('simb_tape -> TkMayor','simb_tape',1,'p_simb_tape','./SintBrainiac.py',723),
  ('simb_tape -> TkMenor','simb_tape',1,'p_simb_tape','./SintBrainiac.py',724),
  ('simb_tape -> TkMas','simb_tape',1,'p_simb_tape','./SintBrainiac.py',725),
  ('simb_tape -> TkResta','simb_tape',1,'p_simb_tape','./SintBrainiac.py',726),
  ('simb_tape -> TkComa','simb_tape',1,'p_simb_tape','./SintBrainiac.py',727),
  ('instlist -> instlist semicoloninst','instlist',2,'p_instlist','./SintBrainiac.py',732),
  ('instlist -> instruccion','instlist',1,'p_instlist','./SintBrainiac.py',733),
  ('semicoloninst -> TkPuntoYComa instruccion','semicoloninst',2,'p_commainst','./SintBrainiac.py',742),
  ('declaracion -> TkDeclare declist','declaracion',2,'p_declaracion','./SintBrainiac.py',748),
  ('declist -> dec TkPuntoYComa declist','declist',3,'p_declist','./SintBrainiac.py',751),
  ('declist -> dec','declist',1,'p_declist','./SintBrainiac.py',752),
  ('dec -> varlist TkType tipo','dec',3,'p_dec','./SintBrainiac.py',755),
  ('varlist -> TkIdent TkComa varlist','varlist',3,'p_varlist','./SintBrainiac.py',758),
  ('varlist -> TkIdent','varlist',1,'p_varlist','./SintBrainiac.py',759),
  ('tipo -> TkInteger','tipo',1,'p_tipo_int','./SintBrainiac.py',762),
  ('tipo -> TkBoolean','tipo',1,'p_tipo_bool','./SintBrainiac.py',765),
  ('tipo -> TkTape','tipo',1,'p_tipo_tape','./SintBrainiac.py',768),
]
