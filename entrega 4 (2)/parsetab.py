
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe8$\x9b\xd7\x80(\x85\x8a3\x81\x9f/\xd0\x92\xbd\xa8'
    
_lr_action_items = {'TkTrue':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TkMod':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,64,64,64,-7,64,64,-8,-9,64,64,64,-10,64,-13,-15,-29,64,-18,64,64,64,-19,64,64,-17,64,64,64,64,-14,64,64,64,64,]),'TkIf':([3,13,17,40,53,72,80,118,122,131,],[6,6,6,6,6,6,6,6,6,6,]),'TkResta':([6,7,9,10,14,15,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,81,82,86,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,121,125,127,129,],[22,22,22,22,44,22,22,-5,22,-6,-4,22,-7,-12,-11,22,63,22,22,63,22,63,-7,63,-49,-45,-50,-46,-47,-44,-48,44,63,-8,-9,63,63,22,22,22,22,22,22,22,22,22,22,22,22,22,22,63,-10,63,22,22,-43,-13,-15,-29,-20,-18,63,63,63,-19,63,-16,-17,63,63,63,63,-14,63,63,22,22,63,63,]),'TkNegacion':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'TkFalse':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TkConjuncion':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,67,67,67,-7,67,67,-8,-9,67,67,67,-10,67,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,67,-24,-14,67,67,67,67,]),'TkNum':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TkParAbre':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TkDone':([11,12,23,25,26,28,29,30,35,41,43,52,54,58,59,78,79,83,84,87,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,119,120,123,124,126,128,130,132,133,134,135,],[-52,42,-5,-6,-4,-7,-12,-11,-31,-51,84,-32,88,-8,-9,-10,-30,-53,-39,117,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,119,-22,-21,-27,-24,-14,120,-38,-36,-33,-40,-42,130,132,-37,-35,-41,135,-34,]),'TkRead':([3,13,17,40,53,72,80,118,122,131,],[7,7,7,7,7,7,7,7,7,7,]),'TkMenorIgual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,66,66,66,-7,66,66,-8,-9,66,66,66,-10,66,-13,-15,-29,-20,-18,-26,-25,66,-19,-23,-16,-17,66,66,66,-24,-14,66,66,66,66,]),'TkFrom':([38,],[81,]),'TkComa':([14,20,44,45,46,47,48,49,50,51,86,],[46,56,-49,-45,-50,-46,-47,-44,-48,46,-43,]),'TkMas':([14,23,25,26,28,29,30,32,35,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,77,78,79,86,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[50,-5,-6,-4,-7,-12,-11,70,70,70,-7,70,-49,-45,-50,-46,-47,-44,-48,50,70,-8,-9,70,70,70,-10,70,-43,-13,-15,-29,-20,-18,70,70,70,-19,70,-16,-17,70,70,70,70,-14,70,70,70,70,]),'TkIdent':([3,5,6,7,9,10,13,15,17,22,24,27,31,33,34,36,40,53,56,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,116,118,121,122,125,131,],[8,20,28,28,28,38,8,28,8,28,28,28,28,28,28,28,8,8,20,20,28,28,28,28,28,28,28,28,28,28,8,28,28,28,28,8,28,28,124,8,28,8,28,8,]),'TkMult':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,71,71,71,-7,71,71,-8,-9,71,71,71,-10,71,-13,-15,-29,71,-18,71,71,71,-19,71,71,-17,71,71,71,71,-14,71,71,71,71,]),'TkConcat':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,62,62,62,-7,62,62,-8,-9,62,62,62,-10,62,-13,-15,-29,62,62,62,62,62,62,62,62,62,62,62,62,62,-14,62,62,62,62,]),'TkDisyuncion':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,75,75,75,-7,75,75,-8,-9,75,75,75,-10,75,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,75,75,75,75,]),'TkWhile':([3,13,17,40,53,72,80,118,122,131,],[9,9,9,9,9,9,9,9,9,9,]),'TkDeclare':([0,1,3,13,17,40,53,72,80,118,122,131,],[-1,5,5,5,5,5,5,5,5,5,5,5,]),'$end':([2,42,88,],[0,-3,-2,]),'TkPuntoYComa':([11,12,21,23,25,26,28,29,30,35,41,43,52,54,58,59,78,79,83,84,87,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,119,120,123,124,126,128,130,132,133,134,135,],[-52,40,57,-5,-6,-4,-7,-12,-11,-31,-51,40,-32,40,-8,-9,-10,-30,-53,-39,40,-57,-61,-60,-62,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,40,-22,-21,-27,-24,-14,40,-38,-36,-33,-40,-42,40,40,-37,-35,-41,40,-34,]),'TkAsignacion':([8,],[36,]),'TkPunto':([14,44,45,46,47,48,49,50,51,86,],[45,-49,-45,-50,-46,-47,-44,-48,45,-43,]),'TkFor':([3,13,17,40,53,72,80,118,122,131,],[10,10,10,10,10,10,10,10,10,10,]),'TkElse':([11,23,25,26,28,29,30,35,41,52,58,59,78,79,83,84,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,119,120,123,124,130,132,133,135,],[-52,-5,-6,-4,-7,-12,-11,-31,-51,-32,-8,-9,-10,-30,-53,-39,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,118,-22,-21,-27,-24,-14,-38,-36,-33,-40,-42,-37,-35,-41,-34,]),'TkLlaveCierra':([23,25,26,28,29,30,44,45,46,47,48,49,50,51,58,59,61,78,86,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,],[-5,-6,-4,-7,-12,-11,-49,-45,-50,-46,-47,-44,-48,85,-8,-9,96,-10,-43,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,]),'TkDesigual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,73,73,73,-7,73,73,-8,-9,73,73,73,-10,73,-13,-15,-29,-20,-18,-26,-25,73,-19,-23,-16,-17,-22,-21,73,-24,-14,73,73,73,73,]),'TkDiv':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,68,68,68,-7,68,68,-8,-9,68,68,68,-10,68,-13,-15,-29,68,-18,68,68,68,-19,68,68,-17,68,68,68,68,-14,68,68,68,68,]),'TkIgual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,74,74,74,-7,74,74,-8,-9,74,74,74,-10,74,-13,-15,-29,-20,-18,-26,-25,74,-19,-23,-16,-17,-22,-21,74,-24,-14,74,74,74,74,]),'TkAt':([85,],[116,]),'TkTo':([23,25,26,28,29,30,38,39,58,59,78,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,],[-5,-6,-4,-7,-12,-11,-7,82,-8,-9,-10,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,121,]),'TkMenor':([14,23,25,26,28,29,30,32,35,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,77,78,79,86,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[48,-5,-6,-4,-7,-12,-11,69,69,69,-7,69,-49,-45,-50,-46,-47,-44,-48,48,69,-8,-9,69,69,69,-10,69,-43,-13,-15,-29,-20,-18,-26,-25,69,-19,-23,-16,-17,69,69,69,-24,-14,69,69,69,69,]),'TkCorcheteCierra':([23,25,26,28,29,30,58,59,77,78,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,129,],[-5,-6,-4,-7,-12,-11,-8,-9,112,-10,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,133,]),'TkTape':([55,],[92,]),'TkDo':([23,25,26,28,29,30,37,58,59,78,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,115,127,],[-5,-6,-4,-7,-12,-11,80,-8,-9,-10,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,122,131,]),'TkType':([19,20,93,],[55,-59,-58,]),'TkBoolean':([55,],[90,]),'TkParCierra':([23,25,26,28,29,30,58,59,60,78,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,],[-5,-6,-4,-7,-12,-11,-8,-9,95,-10,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,]),'TkInteger':([55,],[91,]),'TkExecute':([0,1,3,4,13,16,17,18,21,40,53,72,80,89,90,91,92,94,118,122,131,],[-1,3,13,17,13,53,13,-54,-56,13,13,13,13,-57,-61,-60,-62,-55,13,13,13,]),'TkLlaveAbre':([3,6,7,9,10,13,15,17,22,24,27,31,33,34,36,40,53,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,118,121,122,125,131,],[14,31,31,31,31,14,31,14,31,31,31,31,31,31,31,14,14,31,31,31,31,31,31,31,31,31,31,14,31,31,31,31,14,31,31,14,31,14,31,14,]),'TkWrite':([3,13,17,40,53,72,80,118,122,131,],[15,15,15,15,15,15,15,15,15,15,]),'TkThen':([23,25,26,28,29,30,32,58,59,78,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,],[-5,-6,-4,-7,-12,-11,72,-8,-9,-10,-13,-15,-29,-20,-18,-26,-25,-28,-19,-23,-16,-17,-22,-21,-27,-24,-14,]),'TkMayor':([14,23,25,26,28,29,30,32,35,37,38,39,44,45,46,47,48,49,50,51,52,58,59,60,61,77,78,79,86,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[47,-5,-6,-4,-7,-12,-11,76,76,76,-7,76,-49,-45,-50,-46,-47,-44,-48,47,76,-8,-9,76,76,76,-10,76,-43,-13,-15,-29,-20,-18,-26,-25,76,-19,-23,-16,-17,76,76,76,-24,-14,76,76,76,76,]),'TkMayorIgual':([23,25,26,28,29,30,32,35,37,38,39,52,58,59,60,61,77,78,79,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,114,115,127,129,],[-5,-6,-4,-7,-12,-11,65,65,65,-7,65,65,-8,-9,65,65,65,-10,65,-13,-15,-29,-20,-18,-26,-25,65,-19,-23,-16,-17,65,65,65,-24,-14,65,65,65,65,]),'TkCorcheteAbre':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,116,121,125,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,125,33,33,]),'TkInspeccion':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'seen_program':([0,],[1,]),'term':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'tipo':([55,],[89,]),'semicoloninst':([12,43,54,87,107,113,126,128,134,],[41,41,41,41,41,41,41,41,41,]),'declist':([5,57,],[18,94,]),'varlist':([5,56,57,],[19,93,19,]),'instruccion':([3,13,17,40,53,72,80,118,122,131,],[11,11,11,83,11,11,11,11,11,11,]),'ident_tape':([116,],[123,]),'instlist':([3,13,17,53,72,80,118,122,131,],[12,43,54,87,107,113,126,128,134,]),'programa':([0,],[2,]),'exp':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[32,35,37,39,52,58,59,60,61,77,78,79,97,98,99,100,101,102,103,104,105,106,108,109,110,111,114,115,127,129,]),'exp_un':([6,7,9,10,15,22,24,27,31,33,34,36,62,63,64,65,66,67,68,69,70,71,73,74,75,76,81,82,121,125,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'simb_tape':([14,51,],[49,86,]),'dec':([5,57,],[21,21,]),'lista_tape':([14,],[51,]),'declaracion':([1,3,13,17,40,53,72,80,118,122,131,],[4,16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('seen_program -> <empty>','seen_program',0,'p_seen_program','./brainiac.py',750),
  ('programa -> seen_program declaracion TkExecute instlist TkDone','programa',5,'p_programa','./brainiac.py',758),
  ('programa -> seen_program TkExecute instlist TkDone','programa',4,'p_programa','./brainiac.py',759),
  ('term -> TkNum','term',1,'p_term_num','./brainiac.py',770),
  ('term -> TkTrue','term',1,'p_term_bool','./brainiac.py',782),
  ('term -> TkFalse','term',1,'p_term_bool','./brainiac.py',783),
  ('term -> TkIdent','term',1,'p_term_ident','./brainiac.py',793),
  ('exp_un -> TkResta exp','exp_un',2,'p_exp_un','./brainiac.py',805),
  ('exp_un -> TkNegacion exp','exp_un',2,'p_exp_un','./brainiac.py',806),
  ('exp_un -> TkInspeccion exp','exp_un',2,'p_exp_un','./brainiac.py',807),
  ('exp -> term','exp',1,'p_exp','./brainiac.py',813),
  ('exp -> exp_un','exp',1,'p_exp','./brainiac.py',814),
  ('exp -> TkParAbre exp TkParCierra','exp',3,'p_exp','./brainiac.py',815),
  ('exp -> TkCorcheteAbre exp TkCorcheteCierra','exp',3,'p_exp','./brainiac.py',816),
  ('exp -> TkLlaveAbre exp TkLlaveCierra','exp',3,'p_exp','./brainiac.py',817),
  ('exp -> exp TkMas exp','exp',3,'p_exp','./brainiac.py',818),
  ('exp -> exp TkMult exp','exp',3,'p_exp','./brainiac.py',819),
  ('exp -> exp TkMod exp','exp',3,'p_exp','./brainiac.py',820),
  ('exp -> exp TkDiv exp','exp',3,'p_exp','./brainiac.py',821),
  ('exp -> exp TkResta exp','exp',3,'p_exp','./brainiac.py',822),
  ('exp -> exp TkIgual exp','exp',3,'p_exp','./brainiac.py',823),
  ('exp -> exp TkDesigual exp','exp',3,'p_exp','./brainiac.py',824),
  ('exp -> exp TkMenor exp','exp',3,'p_exp','./brainiac.py',825),
  ('exp -> exp TkMayor exp','exp',3,'p_exp','./brainiac.py',826),
  ('exp -> exp TkMenorIgual exp','exp',3,'p_exp','./brainiac.py',827),
  ('exp -> exp TkMayorIgual exp','exp',3,'p_exp','./brainiac.py',828),
  ('exp -> exp TkDisyuncion exp','exp',3,'p_exp','./brainiac.py',829),
  ('exp -> exp TkConjuncion exp','exp',3,'p_exp','./brainiac.py',830),
  ('exp -> exp TkConcat exp','exp',3,'p_exp','./brainiac.py',831),
  ('instruccion -> TkIdent TkAsignacion exp','instruccion',3,'p_instruccion_asignacion','./brainiac.py',845),
  ('instruccion -> TkRead exp','instruccion',2,'p_instruccion_read','./brainiac.py',856),
  ('instruccion -> TkWrite exp','instruccion',2,'p_instruccion_write','./brainiac.py',867),
  ('instruccion -> TkWhile exp TkDo instlist TkDone','instruccion',5,'p_instruccion_while','./brainiac.py',873),
  ('instruccion -> TkFor TkIdent TkFrom exp TkTo exp TkDo instlist TkDone','instruccion',9,'p_instruccion_for','./brainiac.py',880),
  ('instruccion -> TkFor exp TkTo exp TkDo instlist TkDone','instruccion',7,'p_instruccion_for','./brainiac.py',881),
  ('instruccion -> TkIf exp TkThen instlist TkDone','instruccion',5,'p_instruccion_if','./brainiac.py',895),
  ('instruccion -> TkIf exp TkThen instlist TkElse instlist TkDone','instruccion',7,'p_instruccion_if','./brainiac.py',896),
  ('instruccion -> declaracion TkExecute instlist TkDone','instruccion',4,'p_instruccion_bloque','./brainiac.py',906),
  ('instruccion -> TkExecute instlist TkDone','instruccion',3,'p_instruccion_bloque','./brainiac.py',907),
  ('instruccion -> TkLlaveAbre lista_tape TkLlaveCierra TkAt ident_tape','instruccion',5,'p_instruccion_b','./brainiac.py',917),
  ('ident_tape -> TkCorcheteAbre exp TkCorcheteCierra','ident_tape',3,'p_ident_tape','./brainiac.py',921),
  ('ident_tape -> TkIdent','ident_tape',1,'p_ident_tape','./brainiac.py',922),
  ('lista_tape -> lista_tape simb_tape','lista_tape',2,'p_lista_tape','./brainiac.py',931),
  ('lista_tape -> simb_tape','lista_tape',1,'p_lista_tape','./brainiac.py',932),
  ('simb_tape -> TkPunto','simb_tape',1,'p_simb_tape','./brainiac.py',941),
  ('simb_tape -> TkMayor','simb_tape',1,'p_simb_tape','./brainiac.py',942),
  ('simb_tape -> TkMenor','simb_tape',1,'p_simb_tape','./brainiac.py',943),
  ('simb_tape -> TkMas','simb_tape',1,'p_simb_tape','./brainiac.py',944),
  ('simb_tape -> TkResta','simb_tape',1,'p_simb_tape','./brainiac.py',945),
  ('simb_tape -> TkComa','simb_tape',1,'p_simb_tape','./brainiac.py',946),
  ('instlist -> instlist semicoloninst','instlist',2,'p_instlist','./brainiac.py',952),
  ('instlist -> instruccion','instlist',1,'p_instlist','./brainiac.py',953),
  ('semicoloninst -> TkPuntoYComa instruccion','semicoloninst',2,'p_commainst','./brainiac.py',962),
  ('declaracion -> TkDeclare declist','declaracion',2,'p_declaracion','./brainiac.py',968),
  ('declist -> dec TkPuntoYComa declist','declist',3,'p_declist','./brainiac.py',976),
  ('declist -> dec','declist',1,'p_declist','./brainiac.py',977),
  ('dec -> varlist TkType tipo','dec',3,'p_dec','./brainiac.py',986),
  ('varlist -> TkIdent TkComa varlist','varlist',3,'p_varlist','./brainiac.py',990),
  ('varlist -> TkIdent','varlist',1,'p_varlist','./brainiac.py',991),
  ('tipo -> TkInteger','tipo',1,'p_tipo_integer','./brainiac.py',1000),
  ('tipo -> TkBoolean','tipo',1,'p_tipo_boolean','./brainiac.py',1004),
  ('tipo -> TkTape','tipo',1,'p_tipo_tape','./brainiac.py',1008),
]
